[tox]
minversion = 2.0
skipsdist = True
envlist = docs,linters,functional


[testenv]
usedevelop = True
install_command =
    pip install -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/train} {opts} {packages}
commands =
    /usr/bin/find . -type f -name "*.pyc" -delete
passenv =
    COMMON_TESTS_PATH
    HOME
    http_proxy
    HTTP_PROXY
    https_proxy
    HTTPS_PROXY
    no_proxy
    NO_PROXY
    TESTING_BRANCH
    TESTING_HOME
    USER
whitelist_externals =
    bash
setenv =
    PYTHONUNBUFFERED=1
    ROLE_NAME=lxc_container_create
    TEST_IDEMPOTENCE=false
    VIRTUAL_ENV={envdir}
    WORKING_DIR={toxinidir}


[testenv:docs]
basepython = python3
deps = -r{toxinidir}/doc/requirements.txt
commands =
    bash -c "rm -rf doc/build"
    doc8 doc
    sphinx-build -b html doc/source doc/build/html


[testenv:pdf-docs]
basepython = python3
deps = {[testenv:docs]deps}
whitelist_externals =
  make
commands =
  sphinx-build -W -b latex doc/source doc/build/pdf
  make -C doc/build/pdf


[doc8]
# Settings for doc8:
extensions = .rst


[testenv:releasenotes]
basepython = python3
deps = -r{toxinidir}/doc/requirements.txt
commands =
    sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html


# environment used by the -infra templated docs job
[testenv:venv]
basepython = python3
commands =
    {posargs}


[testenv:pep8]
basepython = python3
commands =
    bash -c "{toxinidir}/tests/common/test-pep8.sh"


[flake8]
# Ignores the following rules due to how ansible modules work in general
#     F403 'from ansible.module_utils.basic import *' used;
#          unable to detect undefined names
ignore=F403


[testenv:bashate]
basepython = python3
commands =
    bash -c "{toxinidir}/tests/common/test-bashate.sh"


[testenv:ansible-syntax]
basepython = python3
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-syntax.sh"


[testenv:ansible-lint]
basepython = python3
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-lint.sh"


# Functional testing for BTRFS backed containers
[testenv:btrfs]
setenv =
    {[testenv]setenv}
    ANSIBLE_OVERRIDES={toxinidir}/tests/overrides-btrfs.yml
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-functional.sh"


# Functional testing for Directory backed containers
[testenv:dir]
setenv =
    {[testenv]setenv}
    ANSIBLE_OVERRIDES={toxinidir}/tests/overrides-dir.yml
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-functional.sh"


# Functional testing for machinectl backed containers
[testenv:mnctl]
setenv =
    {[testenv]setenv}
    ANSIBLE_OVERRIDES={toxinidir}/tests/overrides-machinectl.yml
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-functional.sh"


# Functional testing for OverlayFS backed containers
[testenv:ofs]
setenv =
    {[testenv]setenv}
    ANSIBLE_OVERRIDES={toxinidir}/tests/overrides-overlayfs.yml
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-functional.sh"


# Functional testing for ZFS backed containers
[testenv:zfs]
setenv =
    {[testenv]setenv}
    ANSIBLE_OVERRIDES={toxinidir}/tests/overrides-zfs.yml
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-functional.sh"


[testenv:functional]
setenv =
    {[testenv:dir]setenv}
commands =
    {[testenv:dir]commands}


[testenv:linters]
basepython = python3
commands =
    bash -c "{toxinidir}/tests/common/test-ansible-env-prep.sh"
    {[testenv:pep8]commands}
    {[testenv:bashate]commands}
    {[testenv:ansible-lint]commands}
    {[testenv:ansible-syntax]commands}
